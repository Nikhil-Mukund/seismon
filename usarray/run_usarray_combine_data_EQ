
import os, sys, glob
import numpy as np
import astropy.time

channellist = "input/channels.txt"
lines = [line.rstrip('\n') for line in open(channellist)]

for line in lines:
    lineSplit = line.split(" ")
    lineSplit = filter(None, lineSplit)

    channel = lineSplit[0]
    samplef = float(lineSplit[1])
    calibration = float(lineSplit[2])
    latitude = float(lineSplit[3])
    longitude = float(lineSplit[4])
    starttime = lineSplit[5]
    endtime = lineSplit[6]

    #print channel, samplef, latitude, longitude, starttime, endtime

    starttime = astropy.time.Time(starttime, format='isot', scale='utc')
    endtime = astropy.time.Time(endtime, format='isot', scale='utc')

    gpsStart = starttime.gps
    gpsEnd = endtime.gps

    eqfile = "/home/mcoughlin/Seismon/USArray/Text_Files_EQ/EQ/%s.txt"%(channel.replace(":","_"))
    if not os.path.isfile(eqfile): continue
    events = [line.rstrip('\n') for line in open(eqfile)]
    if len(events) == 0: continue

    eqcombinefile = "/home/mcoughlin/Seismon/USArray/Text_Files_EQ/EQCombine/%s.txt"%(channel.replace(":","_"))
    f = open(eqcombinefile,'w')
    for event in events:
        event = event.split(" ")
        gpsStart = float(event[9])
        gpsEnd = float(event[10])
        timefile = "/home/mcoughlin/Seismon/USArray/Text_Files_EQ/Timeseries/%s/%d-%d.txt"%(channel.replace(":","_"),gpsStart,gpsEnd)
        if not os.path.isfile(timefile): continue
        data_out = np.loadtxt(timefile)

        f.write("%s %.1f %.1f %.1f %.1f %.1f %.1f %.1f %.5e %d %d %.1f %.1f %e %.1f %s %.1f %.5e\n"%(event[0],float(event[1]),float(event[2]),float(event[3]),float(event[4]),float(event[5]),float(event[6]),float(event[7]),float(event[8]),float(event[9]),float(event[10]),float(event[11]),float(event[12]),float(event[13]),float(event[14]),event[15],data_out[1,0],data_out[1,1]))
    f.close()

    events = [line.rstrip('\n') for line in open(eqcombinefile)]
    if len(events) == 0:
        os.system("rm %s"%eqcombinefile)

